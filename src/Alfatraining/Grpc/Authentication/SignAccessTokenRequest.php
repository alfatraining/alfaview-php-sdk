<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authentication/authenticationService.proto

namespace Alfatraining\Grpc\Authentication;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * SignAccessTokenRequest is used to sign credentials without authenticating.
 *
 * Generated from protobuf message <code>authentication.SignAccessTokenRequest</code>
 */
class SignAccessTokenRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     */
    private $accessInfo = null;
    /**
     * Generated from protobuf field <code>.common.AccessToken accessToken = 13;</code>
     */
    private $accessToken = null;

    public function __construct() {
        \GPBMetadata\Authentication\AuthenticationService::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     * @return \Alfatraining\Grpc\Common\AccessInfo
     */
    public function getAccessInfo()
    {
        return $this->accessInfo;
    }

    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     * @param \Alfatraining\Grpc\Common\AccessInfo $var
     * @return $this
     */
    public function setAccessInfo($var)
    {
        GPBUtil::checkMessage($var, \Alfatraining\Grpc\Common\AccessInfo::class);
        $this->accessInfo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.AccessToken accessToken = 13;</code>
     * @return \Alfatraining\Grpc\Common\AccessToken
     */
    public function getAccessToken()
    {
        return $this->accessToken;
    }

    /**
     * Generated from protobuf field <code>.common.AccessToken accessToken = 13;</code>
     * @param \Alfatraining\Grpc\Common\AccessToken $var
     * @return $this
     */
    public function setAccessToken($var)
    {
        GPBUtil::checkMessage($var, \Alfatraining\Grpc\Common\AccessToken::class);
        $this->accessToken = $var;

        return $this;
    }

}

