<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authentication/authenticationService.proto

namespace Alfatraining\Grpc\Authentication;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * RefreshTokenCredentials are used to exchange a refresh token for a new access token.
 * Refresh tokens usually have a validity of 30 days. They are safe to pass to 3rd party applications integrating with us if,
 * and only if, they are created with a limited set of permissions when originally authenticating. The access token must be
 * passed and using a refresh token will then return an access token with at most those permissions originally granted.
 * If permissions were revoked for that user in the meantime, these will not be included in the new access token as well.
 *
 * Generated from protobuf message <code>authentication.RefreshTokenCredentials</code>
 */
class RefreshTokenCredentials extends \Google\Protobuf\Internal\Message
{
    /**
     *&#47; identifier used to create the access token
     *
     * Generated from protobuf field <code>string principal = 1;</code>
     */
    private $principal = '';
    /**
     * Generated from protobuf field <code>string refreshToken = 2;</code>
     */
    private $refreshToken = '';
    /**
     * Generated from protobuf field <code>string companyId = 3;</code>
     */
    private $companyId = '';
    /**
     *&#47; an access token (is usually expired but doesn't have to be)
     *
     * Generated from protobuf field <code>bytes accessToken = 4;</code>
     */
    private $accessToken = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $principal
     *          &#47; identifier used to create the access token
     *     @type string $refreshToken
     *     @type string $companyId
     *     @type string $accessToken
     *          &#47; an access token (is usually expired but doesn't have to be)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Authentication\AuthenticationService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#47; identifier used to create the access token
     *
     * Generated from protobuf field <code>string principal = 1;</code>
     * @return string
     */
    public function getPrincipal()
    {
        return $this->principal;
    }

    /**
     *&#47; identifier used to create the access token
     *
     * Generated from protobuf field <code>string principal = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setPrincipal($var)
    {
        GPBUtil::checkString($var, True);
        $this->principal = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string refreshToken = 2;</code>
     * @return string
     */
    public function getRefreshToken()
    {
        return $this->refreshToken;
    }

    /**
     * Generated from protobuf field <code>string refreshToken = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRefreshToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->refreshToken = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string companyId = 3;</code>
     * @return string
     */
    public function getCompanyId()
    {
        return $this->companyId;
    }

    /**
     * Generated from protobuf field <code>string companyId = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setCompanyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->companyId = $var;

        return $this;
    }

    /**
     *&#47; an access token (is usually expired but doesn't have to be)
     *
     * Generated from protobuf field <code>bytes accessToken = 4;</code>
     * @return string
     */
    public function getAccessToken()
    {
        return $this->accessToken;
    }

    /**
     *&#47; an access token (is usually expired but doesn't have to be)
     *
     * Generated from protobuf field <code>bytes accessToken = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setAccessToken($var)
    {
        GPBUtil::checkString($var, False);
        $this->accessToken = $var;

        return $this;
    }

}

