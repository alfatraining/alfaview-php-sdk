<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: authentication/authenticationService.proto

namespace Alfatraining\Grpc\Authentication;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 **
 * ListAuthenticationsRequest is used to list authentication methods.
 * You may list by a variety of different attributes â€“ these are also
 * combinable, i.e. requesting the authentication methods of a list of user IDs
 * of a specific key type in a specific state (pending/activated/locked).
 * Depending on your permissions, some of these will be invalid or disallowed.
 * For normal users only their own authentication methods will be returned
 * (matching the user ID in their token).
 *
 * Generated from protobuf message <code>authentication.ListAuthenticationsRequest</code>
 */
class ListAuthenticationsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     */
    private $accessInfo = null;
    /**
     * default: 100 max: 1000
     *
     * Generated from protobuf field <code>uint32 limit = 2;</code>
     */
    private $limit = 0;
    /**
     * default: 0
     *
     * Generated from protobuf field <code>uint32 offset = 3;</code>
     */
    private $offset = 0;
    /**
     * filter by principals
     *
     * Generated from protobuf field <code>repeated string principal = 10;</code>
     */
    private $principal;
    /**
     * filter by list of user IDs
     *
     * Generated from protobuf field <code>repeated string userIdList = 11;</code>
     */
    private $userIdList;
    /**
     * filter by account status
     *
     * Generated from protobuf field <code>repeated .authentication.AccountStatus accountStatus = 12;</code>
     */
    private $accountStatus;
    /**
     * filter by authentication type (password, ldap, refresh_token, password_reset, authorization_code etc.)
     *
     * Generated from protobuf field <code>repeated string keyType = 13;</code>
     */
    private $keyType;
    /**
     * filter by users in a company
     *
     * Generated from protobuf field <code>repeated string companyId = 14;</code>
     */
    private $companyId;
    /**
     * filter by those eligible for company switch
     *
     * Generated from protobuf field <code>bool onlyEligibleForCompanySwitch = 15;</code>
     */
    private $onlyEligibleForCompanySwitch = false;

    public function __construct() {
        \GPBMetadata\Authentication\AuthenticationService::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     * @return \Alfatraining\Grpc\Common\AccessInfo
     */
    public function getAccessInfo()
    {
        return $this->accessInfo;
    }

    /**
     * Generated from protobuf field <code>.common.AccessInfo accessInfo = 1;</code>
     * @param \Alfatraining\Grpc\Common\AccessInfo $var
     * @return $this
     */
    public function setAccessInfo($var)
    {
        GPBUtil::checkMessage($var, \Alfatraining\Grpc\Common\AccessInfo::class);
        $this->accessInfo = $var;

        return $this;
    }

    /**
     * default: 100 max: 1000
     *
     * Generated from protobuf field <code>uint32 limit = 2;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * default: 100 max: 1000
     *
     * Generated from protobuf field <code>uint32 limit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkUint32($var);
        $this->limit = $var;

        return $this;
    }

    /**
     * default: 0
     *
     * Generated from protobuf field <code>uint32 offset = 3;</code>
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * default: 0
     *
     * Generated from protobuf field <code>uint32 offset = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkUint32($var);
        $this->offset = $var;

        return $this;
    }

    /**
     * filter by principals
     *
     * Generated from protobuf field <code>repeated string principal = 10;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getPrincipal()
    {
        return $this->principal;
    }

    /**
     * filter by principals
     *
     * Generated from protobuf field <code>repeated string principal = 10;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setPrincipal($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->principal = $arr;

        return $this;
    }

    /**
     * filter by list of user IDs
     *
     * Generated from protobuf field <code>repeated string userIdList = 11;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getUserIdList()
    {
        return $this->userIdList;
    }

    /**
     * filter by list of user IDs
     *
     * Generated from protobuf field <code>repeated string userIdList = 11;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setUserIdList($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->userIdList = $arr;

        return $this;
    }

    /**
     * filter by account status
     *
     * Generated from protobuf field <code>repeated .authentication.AccountStatus accountStatus = 12;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAccountStatus()
    {
        return $this->accountStatus;
    }

    /**
     * filter by account status
     *
     * Generated from protobuf field <code>repeated .authentication.AccountStatus accountStatus = 12;</code>
     * @param int[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAccountStatus($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Alfatraining\Grpc\Authentication\AccountStatus::class);
        $this->accountStatus = $arr;

        return $this;
    }

    /**
     * filter by authentication type (password, ldap, refresh_token, password_reset, authorization_code etc.)
     *
     * Generated from protobuf field <code>repeated string keyType = 13;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getKeyType()
    {
        return $this->keyType;
    }

    /**
     * filter by authentication type (password, ldap, refresh_token, password_reset, authorization_code etc.)
     *
     * Generated from protobuf field <code>repeated string keyType = 13;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setKeyType($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->keyType = $arr;

        return $this;
    }

    /**
     * filter by users in a company
     *
     * Generated from protobuf field <code>repeated string companyId = 14;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getCompanyId()
    {
        return $this->companyId;
    }

    /**
     * filter by users in a company
     *
     * Generated from protobuf field <code>repeated string companyId = 14;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setCompanyId($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->companyId = $arr;

        return $this;
    }

    /**
     * filter by those eligible for company switch
     *
     * Generated from protobuf field <code>bool onlyEligibleForCompanySwitch = 15;</code>
     * @return bool
     */
    public function getOnlyEligibleForCompanySwitch()
    {
        return $this->onlyEligibleForCompanySwitch;
    }

    /**
     * filter by those eligible for company switch
     *
     * Generated from protobuf field <code>bool onlyEligibleForCompanySwitch = 15;</code>
     * @param bool $var
     * @return $this
     */
    public function setOnlyEligibleForCompanySwitch($var)
    {
        GPBUtil::checkBool($var);
        $this->onlyEligibleForCompanySwitch = $var;

        return $this;
    }

}

