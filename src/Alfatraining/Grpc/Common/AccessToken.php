<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/accessToken.proto

namespace Alfatraining\Grpc\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>common.AccessToken</code>
 */
class AccessToken extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     */
    private $userId = '';
    /**
     * Generated from protobuf field <code>string companyId = 2;</code>
     */
    private $companyId = '';
    /**
     * Generated from protobuf field <code>int64 expiresAt = 3;</code>
     */
    private $expiresAt = 0;
    /**
     *&#47; use common.BackendPermission enum values as keys and set the value to true
     *
     * Generated from protobuf field <code>map<int32, bool> permissions = 4;</code>
     */
    private $permissions;
    /**
     * Generated from protobuf field <code>bool isGuest = 6;</code>
     */
    private $isGuest = false;
    /**
     *&#47; used by services when isGuest is true
     *
     * Generated from protobuf field <code>string displayName = 7;</code>
     */
    private $displayName = '';
    /**
     *&#47; used for having shareable guest access credentials
     *
     * Generated from protobuf field <code>string basePermissionsId = 8;</code>
     */
    private $basePermissionsId = '';
    /**
     *&#47; if true this access token cannot be used to sign another access token with an expiration date bigger than its own
     *
     * Generated from protobuf field <code>bool extensionDisallowed = 10;</code>
     */
    private $extensionDisallowed = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $userId
     *     @type string $companyId
     *     @type int|string $expiresAt
     *     @type array|\Google\Protobuf\Internal\MapField $permissions
     *          &#47; use common.BackendPermission enum values as keys and set the value to true
     *     @type bool $isGuest
     *     @type string $displayName
     *          &#47; used by services when isGuest is true
     *     @type string $basePermissionsId
     *          &#47; used for having shareable guest access credentials
     *     @type bool $extensionDisallowed
     *          &#47; if true this access token cannot be used to sign another access token with an expiration date bigger than its own
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\AccessToken::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     * @return string
     */
    public function getUserId()
    {
        return $this->userId;
    }

    /**
     * Generated from protobuf field <code>string userId = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUserId($var)
    {
        GPBUtil::checkString($var, True);
        $this->userId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string companyId = 2;</code>
     * @return string
     */
    public function getCompanyId()
    {
        return $this->companyId;
    }

    /**
     * Generated from protobuf field <code>string companyId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCompanyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->companyId = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 expiresAt = 3;</code>
     * @return int|string
     */
    public function getExpiresAt()
    {
        return $this->expiresAt;
    }

    /**
     * Generated from protobuf field <code>int64 expiresAt = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpiresAt($var)
    {
        GPBUtil::checkInt64($var);
        $this->expiresAt = $var;

        return $this;
    }

    /**
     *&#47; use common.BackendPermission enum values as keys and set the value to true
     *
     * Generated from protobuf field <code>map<int32, bool> permissions = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getPermissions()
    {
        return $this->permissions;
    }

    /**
     *&#47; use common.BackendPermission enum values as keys and set the value to true
     *
     * Generated from protobuf field <code>map<int32, bool> permissions = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setPermissions($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::INT32, \Google\Protobuf\Internal\GPBType::BOOL);
        $this->permissions = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool isGuest = 6;</code>
     * @return bool
     */
    public function getIsGuest()
    {
        return $this->isGuest;
    }

    /**
     * Generated from protobuf field <code>bool isGuest = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsGuest($var)
    {
        GPBUtil::checkBool($var);
        $this->isGuest = $var;

        return $this;
    }

    /**
     *&#47; used by services when isGuest is true
     *
     * Generated from protobuf field <code>string displayName = 7;</code>
     * @return string
     */
    public function getDisplayName()
    {
        return $this->displayName;
    }

    /**
     *&#47; used by services when isGuest is true
     *
     * Generated from protobuf field <code>string displayName = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->displayName = $var;

        return $this;
    }

    /**
     *&#47; used for having shareable guest access credentials
     *
     * Generated from protobuf field <code>string basePermissionsId = 8;</code>
     * @return string
     */
    public function getBasePermissionsId()
    {
        return $this->basePermissionsId;
    }

    /**
     *&#47; used for having shareable guest access credentials
     *
     * Generated from protobuf field <code>string basePermissionsId = 8;</code>
     * @param string $var
     * @return $this
     */
    public function setBasePermissionsId($var)
    {
        GPBUtil::checkString($var, True);
        $this->basePermissionsId = $var;

        return $this;
    }

    /**
     *&#47; if true this access token cannot be used to sign another access token with an expiration date bigger than its own
     *
     * Generated from protobuf field <code>bool extensionDisallowed = 10;</code>
     * @return bool
     */
    public function getExtensionDisallowed()
    {
        return $this->extensionDisallowed;
    }

    /**
     *&#47; if true this access token cannot be used to sign another access token with an expiration date bigger than its own
     *
     * Generated from protobuf field <code>bool extensionDisallowed = 10;</code>
     * @param bool $var
     * @return $this
     */
    public function setExtensionDisallowed($var)
    {
        GPBUtil::checkBool($var);
        $this->extensionDisallowed = $var;

        return $this;
    }

}

