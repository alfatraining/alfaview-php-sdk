<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/company.proto

namespace Alfatraining\Grpc\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>common.Branding</code>
 */
class Branding extends \Google\Protobuf\Internal\Message
{
    /**
     *&#47; title is shown next to the logo inside the business app
     *
     * Generated from protobuf field <code>string title = 1;</code>
     */
    private $title = '';
    /**
     *&#47; background of the navigation bar
     *
     * Generated from protobuf field <code>string navbarBg = 2;</code>
     */
    private $navbarBg = '';
    /**
     *&#47; url to a logo file (png only)
     *
     * Generated from protobuf field <code>string logoURL = 3;</code>
     */
    private $logoURL = '';
    /**
     *&#47; width of the logo
     *
     * Generated from protobuf field <code>int64 logoHeight = 4;</code>
     */
    private $logoHeight = 0;
    /**
     *&#47; height of the logo
     *
     * Generated from protobuf field <code>int64 logoWidth = 5;</code>
     */
    private $logoWidth = 0;
    /**
     *&#47; whether branding is enabled
     *
     * Generated from protobuf field <code>bool enabled = 6;</code>
     */
    private $enabled = false;
    /**
     *&#47; url to an alternative logo file (used on login form, png only)
     *
     * Generated from protobuf field <code>string logoAlternativeURL = 7;</code>
     */
    private $logoAlternativeURL = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $title
     *          &#47; title is shown next to the logo inside the business app
     *     @type string $navbarBg
     *          &#47; background of the navigation bar
     *     @type string $logoURL
     *          &#47; url to a logo file (png only)
     *     @type int|string $logoHeight
     *          &#47; width of the logo
     *     @type int|string $logoWidth
     *          &#47; height of the logo
     *     @type bool $enabled
     *          &#47; whether branding is enabled
     *     @type string $logoAlternativeURL
     *          &#47; url to an alternative logo file (used on login form, png only)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Company::initOnce();
        parent::__construct($data);
    }

    /**
     *&#47; title is shown next to the logo inside the business app
     *
     * Generated from protobuf field <code>string title = 1;</code>
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     *&#47; title is shown next to the logo inside the business app
     *
     * Generated from protobuf field <code>string title = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setTitle($var)
    {
        GPBUtil::checkString($var, True);
        $this->title = $var;

        return $this;
    }

    /**
     *&#47; background of the navigation bar
     *
     * Generated from protobuf field <code>string navbarBg = 2;</code>
     * @return string
     */
    public function getNavbarBg()
    {
        return $this->navbarBg;
    }

    /**
     *&#47; background of the navigation bar
     *
     * Generated from protobuf field <code>string navbarBg = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setNavbarBg($var)
    {
        GPBUtil::checkString($var, True);
        $this->navbarBg = $var;

        return $this;
    }

    /**
     *&#47; url to a logo file (png only)
     *
     * Generated from protobuf field <code>string logoURL = 3;</code>
     * @return string
     */
    public function getLogoURL()
    {
        return $this->logoURL;
    }

    /**
     *&#47; url to a logo file (png only)
     *
     * Generated from protobuf field <code>string logoURL = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setLogoURL($var)
    {
        GPBUtil::checkString($var, True);
        $this->logoURL = $var;

        return $this;
    }

    /**
     *&#47; width of the logo
     *
     * Generated from protobuf field <code>int64 logoHeight = 4;</code>
     * @return int|string
     */
    public function getLogoHeight()
    {
        return $this->logoHeight;
    }

    /**
     *&#47; width of the logo
     *
     * Generated from protobuf field <code>int64 logoHeight = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLogoHeight($var)
    {
        GPBUtil::checkInt64($var);
        $this->logoHeight = $var;

        return $this;
    }

    /**
     *&#47; height of the logo
     *
     * Generated from protobuf field <code>int64 logoWidth = 5;</code>
     * @return int|string
     */
    public function getLogoWidth()
    {
        return $this->logoWidth;
    }

    /**
     *&#47; height of the logo
     *
     * Generated from protobuf field <code>int64 logoWidth = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLogoWidth($var)
    {
        GPBUtil::checkInt64($var);
        $this->logoWidth = $var;

        return $this;
    }

    /**
     *&#47; whether branding is enabled
     *
     * Generated from protobuf field <code>bool enabled = 6;</code>
     * @return bool
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     *&#47; whether branding is enabled
     *
     * Generated from protobuf field <code>bool enabled = 6;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnabled($var)
    {
        GPBUtil::checkBool($var);
        $this->enabled = $var;

        return $this;
    }

    /**
     *&#47; url to an alternative logo file (used on login form, png only)
     *
     * Generated from protobuf field <code>string logoAlternativeURL = 7;</code>
     * @return string
     */
    public function getLogoAlternativeURL()
    {
        return $this->logoAlternativeURL;
    }

    /**
     *&#47; url to an alternative logo file (used on login form, png only)
     *
     * Generated from protobuf field <code>string logoAlternativeURL = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setLogoAlternativeURL($var)
    {
        GPBUtil::checkString($var, True);
        $this->logoAlternativeURL = $var;

        return $this;
    }

}

