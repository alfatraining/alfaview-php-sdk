<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/replyInfo.proto

namespace Alfatraining\Grpc\Common;

/**
 * rational behind the status code values:
 * there are status codes which do not indicate an error... those codes have a value LESS than 1000
 * in contrast, any code with 1000 or more indicates an error of some sort
 * [ks-03-2017]: alfatraining/proto#20: we decided that the range 500-999 is reserved for warnings
 * this means that codes in this range do NOT indicate success NOR unrecoverable error
 *
 * Protobuf enum <code>Common\ReplyStatusCode</code>
 */
class ReplyStatusCode
{
    /**
     * Generated from protobuf enum <code>OK = 0;</code>
     */
    const OK = 0;
    /**
     * Generated from protobuf enum <code>ACCEPTED = 3;</code>
     */
    const ACCEPTED = 3;
    /**
     * Generated from protobuf enum <code>WELCOME = 4;</code>
     */
    const WELCOME = 4;
    /**
     * Generated from protobuf enum <code>PING = 1;</code>
     */
    const PING = 1;
    /**
     * Generated from protobuf enum <code>PONG = 2;</code>
     */
    const PONG = 2;
    /**
     * for situations where multiple entities are transferred in one go, this status code can be used to indicate partial failures in replies
     *
     * Generated from protobuf enum <code>PARTIAL_ERROR = 5;</code>
     */
    const PARTIAL_ERROR = 5;
    /**
     * Generated from protobuf enum <code>INTERNAL_ERROR = 1000;</code>
     */
    const INTERNAL_ERROR = 1000;
    /**
     * Generated from protobuf enum <code>AUTHENTICATION_ERROR = 1002;</code>
     */
    const AUTHENTICATION_ERROR = 1002;
    /**
     * used by the authentication service to indicate errors concerning the account status (deactivated, deleted, locked)
     *
     * Generated from protobuf enum <code>ACCOUNT_STATUS_ERROR = 1003;</code>
     */
    const ACCOUNT_STATUS_ERROR = 1003;
    /**
     * used by hydra when a message is not formatted correctly, and maybe other services will have similar requirements
     *
     * Generated from protobuf enum <code>PROTOCOL_ERROR = 1004;</code>
     */
    const PROTOCOL_ERROR = 1004;
    /**
     * returned when the action/event is not implemented by the service but it is not necessarily an invalid action
     *
     * Generated from protobuf enum <code>NOT_IMPLEMENTED = 501;</code>
     */
    const NOT_IMPLEMENTED = 501;
    /**
     * Generated from protobuf enum <code>ACTION_INVALID = 1005;</code>
     */
    const ACTION_INVALID = 1005;
    /**
     * Generated from protobuf enum <code>INSUFFICIENT_PERMISSIONS = 1006;</code>
     */
    const INSUFFICIENT_PERMISSIONS = 1006;
    /**
     * Generated from protobuf enum <code>RANGE_ERROR = 1007;</code>
     */
    const RANGE_ERROR = 1007;
    /**
     * Generated from protobuf enum <code>HOSTNAME_INVALID = 1008;</code>
     */
    const HOSTNAME_INVALID = 1008;
    /**
     * Generated from protobuf enum <code>REQUEST_ID_INVALID = 1009;</code>
     */
    const REQUEST_ID_INVALID = 1009;
    /**
     * Generated from protobuf enum <code>ACCESS_INFO_MISSING = 1040;</code>
     */
    const ACCESS_INFO_MISSING = 1040;
    /**
     * Generated from protobuf enum <code>REQUEST_EMPTY = 1041;</code>
     */
    const REQUEST_EMPTY = 1041;
    /**
     * Generated from protobuf enum <code>VERSION_OUTDATED = 1042;</code>
     */
    const VERSION_OUTDATED = 1042;
    /**
     * when a user supplied string is too large
     *
     * Generated from protobuf enum <code>MAX_SIZE_EXCEEDED = 1043;</code>
     */
    const MAX_SIZE_EXCEEDED = 1043;
    /**
     * Generated from protobuf enum <code>USER_ID_INVALID = 1010;</code>
     */
    const USER_ID_INVALID = 1010;
    /**
     * Generated from protobuf enum <code>USER_INVALID = 1011;</code>
     */
    const USER_INVALID = 1011;
    /**
     * Generated from protobuf enum <code>USER_OFFLINE = 1012;</code>
     */
    const USER_OFFLINE = 1012;
    /**
     * returned by engine to the currently connected client when a new client with the same userId joins the same room
     *
     * Generated from protobuf enum <code>OTHER_CLIENT_CONNECTED = 1013;</code>
     */
    const OTHER_CLIENT_CONNECTED = 1013;
    /**
     * Generated from protobuf enum <code>USER_UPDATE = 12;</code>
     */
    const USER_UPDATE = 12;
    /**
     * Generated from protobuf enum <code>USER_LEAVE = 13;</code>
     */
    const USER_LEAVE = 13;
    /**
     * Generated from protobuf enum <code>ROOM_ID_INVALID = 1020;</code>
     */
    const ROOM_ID_INVALID = 1020;
    /**
     * Generated from protobuf enum <code>ROOM_INVALID = 1021;</code>
     */
    const ROOM_INVALID = 1021;
    /**
     * Generated from protobuf enum <code>ROOM_HOST_INVALID = 1022;</code>
     */
    const ROOM_HOST_INVALID = 1022;
    /**
     * Generated from protobuf enum <code>ROOM_NOT_RUNNING = 1023;</code>
     */
    const ROOM_NOT_RUNNING = 1023;
    /**
     * returned when the client tries to join a subroom that does not exist
     *
     * Generated from protobuf enum <code>SUBROOM_INVALID = 500;</code>
     */
    const SUBROOM_INVALID = 500;
    /**
     * used when the engine cannot find the room indicated via its room ID
     *
     * Generated from protobuf enum <code>ROOM_NOT_FOUND = 1025;</code>
     */
    const ROOM_NOT_FOUND = 1025;
    /**
     * Generated from protobuf enum <code>OUT_OF_SLOTS_ROOM = 1030;</code>
     */
    const OUT_OF_SLOTS_ROOM = 1030;
    /**
     * Generated from protobuf enum <code>OUT_OF_SLOTS_USER = 1031;</code>
     */
    const OUT_OF_SLOTS_USER = 1031;
    /**
     * Generated from protobuf enum <code>OUT_OF_SLOTS_AUDIO = 1032;</code>
     */
    const OUT_OF_SLOTS_AUDIO = 1032;
    /**
     * Generated from protobuf enum <code>OUT_OF_SLOTS_VIDEO = 1033;</code>
     */
    const OUT_OF_SLOTS_VIDEO = 1033;
    /**
     * Generated from protobuf enum <code>STREAM_ID_INVALID = 1050;</code>
     */
    const STREAM_ID_INVALID = 1050;
    /**
     * hydra is using 100-199 for ok and 1100-1199 for not ok
     *
     * Generated from protobuf enum <code>HYDRA_STREAM_ASSOCIATED_OK = 103;</code>
     */
    const HYDRA_STREAM_ASSOCIATED_OK = 103;
    /**
     * Generated from protobuf enum <code>HYDRA_STREAM_CLOSED = 104;</code>
     */
    const HYDRA_STREAM_CLOSED = 104;
    /**
     * Generated from protobuf enum <code>HYDRA_STREAM_CREATED = 105;</code>
     */
    const HYDRA_STREAM_CREATED = 105;
    /**
     * Generated from protobuf enum <code>HYDRA_STREAM_TIMEOUT = 1100;</code>
     */
    const HYDRA_STREAM_TIMEOUT = 1100;
    /**
     * Generated from protobuf enum <code>HYDRA_STREAM_ERROR = 1101;</code>
     */
    const HYDRA_STREAM_ERROR = 1101;
    /**
     * when client is disconnected because a specific amount of time passed without having any streams
     *
     * Generated from protobuf enum <code>HYDRA_CLIENT_TIMEOUT = 1102;</code>
     */
    const HYDRA_CLIENT_TIMEOUT = 1102;
}

